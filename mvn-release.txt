
- mvn clean package
erzeugt das bereitzustellende Artefakt.
Build des Projektes / Moduls.


- mvn clean install
Build des Projektes / Moduls.
Die Artefakte werden zusätzlich in das lokale Maven-Repository kopiert.


- mvn clean deploy
Build des Projektes / Moduls.
Die Artefakte werden zusätzlich in das lokale Maven-Repository kopiert
als auch an den Repository-Server gesendet.


- mvn              clean release:prepare (-DautoVersionSubmodules=true; siehe maven-release-plugin)
- mvn --batch-mode clean release:prepare -DreleaseVersion=1.1 -DdevelopmentVersion=1.2-SNAPSHOT
Vergibt eine neue Versionsnummer und kennzeichnet diese Version im Git-Repository mit einem Tag.


- mvn clean release:rollback
Macht die Änderungen rückgängig, wenn es bei der Vorbereitung des Releases zu Fehlern gekommen ist.


- mvn release:perform
Holt die gekennzeichnete Version aus dem Git-Repository und baut sie.
Abschließend erfolgt das Deployment dieses Builds inklusive Quellcode und JavaDoc in das *Release*-Repository des Repository-Servers.


- mvn clean release:prepare -DdryRun=true -DautoVersionSubmodules=true
Führt einen Testlauf durch, ohne Änderungen am Projekt zu machen.

- mvn clean release:clean
Entfernt alle beim Testlauf erzeugten Dateien.


- mvn versions:set -DnewVersion=1.8-SNAPSHOT
Setzt in allen Projekt-POMs die neue Version.


- mvn versions:revert
Macht die Änderungen rückgängig.


- mvn versions:commit
Entfernt alle temporären Dateien.
